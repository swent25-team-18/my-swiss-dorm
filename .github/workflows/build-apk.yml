name: Build APK Artifact

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened

jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # First step : Checkout the repository on the runner
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # Setup JDK
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # Gradle cache to speed up the build
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      # Decode google-services.json and local.properties from secrets (without echoing)
      - name: Decode secrets securely
        run: |
          mkdir -p ./app
          if [ -n "${{ secrets.GOOGLE_SERVICES }}" ]; then
            base64 --decode <<< "${{ secrets.GOOGLE_SERVICES }}" > ./app/google-services.json
          fi
          if [ -n "${{ secrets.LOCAL_PROPERTIES }}" ]; then
            base64 --decode <<< "${{ secrets.LOCAL_PROPERTIES }}" > ./local.properties
          fi

      # Decode debug keystore from secret (without printing)
      - name: Decode debug keystore securely
        run: |
          base64 --decode <<< "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" > debug.keystore
          chmod 600 debug.keystore

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Assemble signed debug APK using the shared debug keystore
      - name: Assemble Debug APK (signed)
        run: |
          ./gradlew build \
            -Pandroid.injected.signing.store.file=debug.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.KS_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KS_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KS_KEY_PASSWORD }}

      # Verify signing and print certificate info (safe, does not reveal passwords)
      - name: Verify APK signature
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y apksigner >/dev/null
          apksigner verify --print-certs app/build/outputs/apk/debug/app-debug.apk

      # Upload signed APK artifact
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
